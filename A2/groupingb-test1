(declare-const x1 Int)
(declare-const x2 Int)
(declare-const x3 Int)
(declare-const x4 Int)
(declare-const x5 Int)
(declare-const x6 Int)
(declare-const x7 Int)
(declare-const a1 (Array Int Int))
(define-fun preference ((x Int) (y Int)) Int (ite (= x y) 1 0))
(define-fun alone ((x Int) (y Int)) Int (ite (= x y) 1 0))

(assert (and (> x1 0) (> x2 0) (> x3 0) (> x4 0) (> x5 0) (> x6 0) (> x7 0)))
(assert (and (<= x1 7) (<= x2 7) (<= x3 7) (<= x4 7) (<= x5 7) (<= x6 7) (<= x7 7)))
(assert-soft (and (not (= x1 1)) (not (= x2 2)) (not (= x3 3)) (not (= x4 4)) (not (= x5 5)) (not (= x6 6)) (not (= x7 7))))
(assert (distinct x1 x2 x3 x4 x5 x6 x7))
(assert (= (+ x1 x2 x3 x4 x5 x6 x7) 28))

(maximize (+ (preference x1 4) (preference x2 4) (preference x3 4) (preference x4 5) (preference x5 4) (preference x6 4) (preference x7 4)))
(minimize (+ (alone x1 1) (alone x2 2) (alone x3 3) (alone x4 4) (alone x5 5) (alone x6 6) (alone x7 7)))

(assert (= (select a1 1) x1))
(assert (= (select a1 2) x2))
(assert (= (select a1 3) x3))
(assert (= (select a1 4) x4))
(assert (= (select a1 5) x5))
(assert (= (select a1 6) x6))
(assert (= (select a1 7) x7))
(assert (= 1 (select a1 (select a1 1))))
(assert (= 2 (select a1 (select a1 2))))
(assert (= 3 (select a1 (select a1 3))))
(assert (= 4 (select a1 (select a1 4))))
(assert (= 5 (select a1 (select a1 5))))
(assert (= 6 (select a1 (select a1 6))))
(assert (= 7 (select a1 (select a1 7))))
(check-sat)
(get-model)